{"version":3,"sources":["Categoryadding.js","Category.js","Categories.js","Maincategory.js","Taskinput.js","Item.js","Items.js","index.js"],"names":["Categoryadding","props","Fragment","className","type","placeholder","class","value","newCategory","onChange","onClick","Category","style","category","currentTask","backgroundColor","color","taskCounting","Categories","data","map","item","Maincategory","Taskinput","id","newTask","Item","onClickChecked","task","isDone","visibility","opacity","fontStyle","textDecoration","onClickFavorite","isFavorite","onClickDelete","Items","listing","App","useState","setNewCategory","setNewTask","setCurrentTask","setListing","tasks","setData","event","newCate","target","charAt","toUpperCase","slice","console","log","condition","forEach","alert","newData","concat","mainCategory","newTa","element","workingData","length","taskChecked","taskCategory","i","splice","checking","adding","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.087fb1ec.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Categoryadding(props) {\n  return (\n    <React.Fragment>\n      <div className=\"category-adding\">\n        <input type=\"text\"\n          placeholder='New category...'\n          class='category-new'\n          value={props.newCategory}\n          onChange={props.onChange}/>\n          <button className='category-plus' onClick={props.onClick}><i className=\"fas fa-plus\"></i></button>\n        </div>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\nexport default function Category(props) {\n  return (\n    <React.Fragment>\n      <li className=\"category\" key={props.category} onClick={props.onClick}\n      style={ props.category===props.currentTask ? {backgroundColor: \"orange\", color:\"blue\"} : {}}\n      >\n        <div className=\"category-icon\"><i className=\"fas fa-star\"></i></div>\n        <div className=\"category-name\">{props.category}</div>\n        <div className=\"category-number\">{props.taskCounting}</div>\n      </li>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Category from './Category.js'\n\n\nexport default function Categories(props) {\n  return (\n    <React.Fragment>\n      <ul className=\"categories\">\n        {props.data.map(item => {\n          return (\n            <Category currentTask={props.currentTask} key={item.category} category={item.category}\n              taskCounting={item.taskCounting}\n              onClick={() => props.onClick(item.category)}\n            \n            />\n          )\n          })}\n      </ul>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\nexport default function Maincategory(props) {\n  return (\n    <React.Fragment>\n      <div className=\"main-category\">{props.currentTask}</div>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\nexport default function Taskinput(props) {\n  return (\n    <React.Fragment>\n      <div className=\"input-task\">\n        <input type=\"text\"\n          id='input'\n          class='input'\n          placeholder='What is your new task...'\n          value={props.newTask}\n          onChange={props.onChange}/>\n        <button className='adding' onClick={props.onClick}>Add</button>\n          </div>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\nexport default function Item(props) {\n\n  // checkedStyle = {\n\n  // }\n\n  return (\n    <div className=\"item\" >\n      <button className=\"checked\"\n        onClick={() => props.onClickChecked(props.item.task, props.currentTask)}\n        \n        style={props.item.isDone ? { backgroundColor: \"green\", color: \"yellow\" } : { backgroundColor: \"white\", color: \"black\" }}\n        \n        style={props.currentTask === 'Favorite' ? { visibility: \"hidden\" } : { visibility: \"visible\" }}\n\n      ><i className=\"fa fa-check\"></i></button>\n      \n        <div className=\"task\" style={props.item.isDone ? {opacity: 0.3, fontStyle: 'italic', textDecoration: 'line-through'} : {opacity:1, fontStyle: 'normal'}}>{props.item.task}</div>\n      <button className=\"importance\" onClick={() => props.onClickFavorite(props.item.task, props.currentTask)}\n      style={props.item.isFavorite ? {backgroundColor: \"red\", color: \"yellow\"} : {backgroundColor:\"white\", color:\"black\"}}\n      ><i className=\"fa fa-star\"></i></button>\n        <button className=\"delete\" style={props.currentTask === 'Favorite' ? { visibility: \"hidden\" } : { visibility: \"visible\" }} onClick={() => props.onClickDelete(props.item.task, props.currentTask)}><i className=\"fa fa-times\"></i></button>\n      </div>\n  )\n}\n","import React from 'react'\nimport Item from './Item.js'\n\n\n\nexport default function Items(props) {\n\n  return (\n    <React.Fragment>\n      <div className=\"items\">\n        {props.listing.map(item => {\n          return (\n            <Item key={item.task} item={item} currentTask={props.currentTask}\n              onClickChecked={props.onClickChecked}\n              onClickDelete={props.onClickDelete}\n              onClickFavorite={props.onClickFavorite}\n            \n            />\n          )\n        })}\n      </div>\n    </React.Fragment>\n  )\n}\n","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport Categoryadding from './Categoryadding.js'\nimport Categories from './Categories.js'\nimport Maincategory from './Maincategory.js'\nimport Taskinput from './Taskinput.js'\nimport Items from './Items.js'\nimport './index.css';\n\nfunction App() {\n\n// input - new category\n// input - new task \n\n// data = [\n//   {\n//     category: abc,\n//     tasks: [\n//       {\n//         taskName: xyz,\n//         isDone: true / false,\n//         isFavorite: true / false,\n//       }\n//     ],\n//     taskCounting : 0\n//   }\n// ]\n\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newTask, setNewTask] = useState(\"\")\n  const [currentTask, setCurrentTask] = useState(\"Favorite\")\n  const [listing, setListing] = useState([])\n  const [data, setData] = useState([{\n    category: \"Favorite\",\n    tasks: [],\n    taskCounting: 0\n  }])\n\n  const addingCategory = (event) => {\n    let newCate = event.target.value;\n    newCate = newCate.charAt(0).toUpperCase() + \n           newCate.slice(1); \n    console.log(newCate);\n    setNewCategory(newCate)\n  }\n\n  const submittingCategory = () => {\n    //check if the category exist already\n    let condition = true;\n    data.forEach(item => {\n      if (item.category === newCategory) {\n        alert('The category already exists. Please choose another one.')\n        condition = false;\n      }\n    })\n\n    if (condition) {\n      const newData = [{\n        category: newCategory,\n        tasks: [],\n        taskCounting:0\n      }];\n      setData(data.concat(newData))\n      console.log(data.concat(newData));\n      console.log('from submitting new category');\n      //delete the adding field\n      setNewCategory(\"\")\n    }\n  }\n  \n  // tasks\n  const addingTask = (event) => {\n    let newTa = event.target.value;\n    newTa = newTa.charAt(0).toUpperCase() + \n           newTa.slice(1); \n    console.log(newTa);\n    setNewTask(newTa);\n  }\n\n  const setMainCategory = (mainCategory) => {\n    setCurrentTask(mainCategory)\n    data.forEach(item => {\n      if (item.category === mainCategory) {\n        setListing(item.tasks);\n      }\n    })\n  }\n\n  const submittingTask = () => {\n\n    let condition = true;\n    data.forEach(item => {\n      item.tasks.forEach(element => {\n        if (element.task === newTask) {\n          alert('Task already exists. Please choose another one.')\n          condition = false;\n        }\n      })\n    })\n\n    if (condition) {\n      const workingData = data.map(item => {\n        if (item.category === currentTask && currentTask === 'Favorite') {\n          alert('Sorry, you cannot add directly to Favorite. You have to mark favorite star from each task you want.')\n          return {...item}\n        }\n        else if (item.category === currentTask) {\n          return (\n            {\n              category: item.category,\n              tasks: item.tasks.concat([{\n                task: newTask,\n                isDone: false,\n                isFavorite: false\n              }]),\n              taskCounting: item.tasks.length + 1\n            }\n          )\n        }\n        else {\n          return (\n            { ...item }\n          )\n        }\n      });\n      setData(workingData);\n      //give listing to Items\n      workingData.forEach(item => {\n        if (item.category === currentTask) {\n          setListing(item.tasks);\n        }\n      })\n  \n      console.log(workingData);\n      setNewTask(\"\");\n    }\n  };\n\n  // 3 button in item\n\n  const handleChecked = (taskChecked, taskCategory) => {\n    if (taskCategory === 'Favorite') {\n      alert('Sorry, you can only mark it from its own category. Thank you!')\n    } else {\n\n      const newData = [...data];\n      newData.forEach(item => {\n        if (item.category === taskCategory) {\n          item.tasks.forEach(element => {\n            if (element.task === taskChecked) {\n              element.isDone = !element.isDone;\n            }\n          })\n        }\n      })\n      setData(newData);\n    }\n  }\n\n  const handleDelete = (taskChecked, taskCategory) => { \n    let newData = [...data];\n    newData.forEach(item => {\n      if (item.category === taskCategory) {\n        for (let i = 0; i < item.tasks.length; i++) {\n          if (item.tasks[i].task === taskChecked) {\n            item.tasks.splice(i, 1);\n            item.taskCounting -= 1;\n          }\n        }\n      }\n    })\n    //delete in the favorite\n    for (let i = 0; i < newData[0].tasks.length; i++) {\n      if (newData[0].tasks[i].task === taskChecked) {\n        newData[0].tasks.splice(i, 1)\n        newData[0].taskCounting -= 1;\n      }\n    }\n    setData(newData)\n  }\n\n  const handleFavorite = (taskChecked, taskCategory) => {\n    let newData = [...data];\n    let checking;\n    newData.forEach(item => {\n       \n        for (let i = 0; i < item.tasks.length; i++) {\n          if (item.tasks[i].task === taskChecked) {\n            item.tasks[i].isFavorite = !item.tasks[i].isFavorite;\n            checking = item.tasks[i].isDone;\n          }\n        }\n      \n    })\n    \n    \n    let adding = true;\n    for (let i = 0; i < newData[0].tasks.length; i++) {\n      if (newData[0].tasks[i].task === taskChecked) {\n        newData[0].tasks.splice(i, 1);\n        adding = false;\n        newData[0].taskCounting -= 1;\n      }\n    }\n    if (adding) {\n      console.log(newData[0].tasks)\n      newData[0].tasks = newData[0].tasks.concat([{\n        task: taskChecked,\n        isDone: checking, \n        isFavorite: true\n      }]);\n      newData[0].taskCounting += 1;\n    }\n    \n    setData(newData);\n  };\n\n  return (\n    <div className=\"panel\">\n      <div className=\"left-section\">\n        <Categoryadding newCategory={newCategory}\n          onChange={addingCategory}\n          onClick={submittingCategory} />\n        <Categories data={data} currentTask={currentTask} onClick={setMainCategory}/>\n      </div>\n      <div className=\"right-section\">\n        <div className=\"top\">\n          <Maincategory currentTask={currentTask}/>\n          <Taskinput newTask={newTask} onChange={addingTask} onClick={submittingTask}/>\n        </div>\n        <Items listing={listing} currentTask={currentTask}\n          onClickChecked={handleChecked}\n          onClickDelete={handleDelete}\n          onClickFavorite={handleFavorite}\n        />\n      </div>\n    </div>\n  )\n}\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}